// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  folders   Folder[]
  assets    Asset[]
  apiKey    ApiKey?
}

model ApiKey {
  id           String   @id @default(uuid())
  key          String   @unique
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @unique
  usedSpace    Int      @default(0) // In bytes
  requestCount Int      @default(0)
  enabled      Boolean  @default(true)
  createdAt    DateTime @default(now())
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  assets    Asset[]
  createdAt DateTime @default(now())
}

model Asset {
  id           String   @id @default(uuid())
  name         String
  publicUrl    String
  thumbnailUrl String
  key          String
  assetType    String // e.g., image, video, etc.
  format       String // jpg, png, mp4, etc.
  size         Int    // in bytes
  folder       Folder  @relation(fields: [folderId], references: [id])
  folderId     String
  user         User    @relation(fields: [userId],references:[id])
  userId       String
  createdAt    DateTime @default(now())
}

